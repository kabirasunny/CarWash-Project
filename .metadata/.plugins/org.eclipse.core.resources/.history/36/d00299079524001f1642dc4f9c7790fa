package com.carwash.controller;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.carwash.dao.CarWashDao;
import com.carwash.entity.Booking;
import com.carwash.entity.CarWash;
import com.carwash.service.CarWashService;
import com.carwash.session.SessionHelper;

import jakarta.servlet.http.HttpSession;
import jakarta.validation.Valid;

@Controller
public class CarWashController {

	private String number;

	@Autowired
	private CarWashService carWashService;

	@Autowired
	private CarWashDao carWashDao;

	@Autowired
	private SessionHelper sessionHelper;

	@GetMapping("/home")
	public String home() {
		return "home";
	}

	@GetMapping("/signup")
	public String getSignup() {
		return "signup";
	}

	// yaha logic dena hoga for popup

	@PostMapping(path = "/register")
	public String getRegister(@Valid @ModelAttribute("carWash") CarWash carWash, BindingResult result, Model m) {

		if (result.hasErrors()) {
			return "signup";

		}

		else {
			carWash.getPhoneNumber();
			carWash.getEmail();
			carWash.getFullname();
			carWash.getPassword();
			int r = carWashDao.getRegister(carWash);
			if (r == 1) {
				return "success";
			} else {
				return "signup";
			}

		}
	}

	@GetMapping("/login")
	public String getLoginPage() {
		return "login";
	}

	@PostMapping(path = "/loginuser")
	public String getLogin(@RequestParam("phoneNumber") String number, @RequestParam("password") String password,
			Model m, RedirectAttributes attrs, HttpSession session) {
		CarWash carWash = carWashService.getLogin(number, password);
		String fullname = carWash.getFullname();
//		attrs.addFlashAttribute("number", number);
		session.setAttribute("name", fullname);
		session.setAttribute("call", "show()");
		session.setAttribute("logout", "Logout");
		session.setAttribute("number", number);
		String num = (String) session.getAttribute("number");
		this.number = num;
		System.out.println(carWash);
		return "home";
	}

	@GetMapping("/nor")
	public String normal(Model m) {
		return "normal";
	}

	@GetMapping("/medi")
	public String medium(Model m) {
		return "medium";
	}

	@GetMapping("/premi")
	public String premium(Model m) {
		return "premium";
	}

	// =====================car booking set
	// process===========================================

	@GetMapping("/normal")
	public String setNormal(Model m) {
		Booking book = new Booking();

		LocalDateTime now = LocalDateTime.now();
		DateTimeFormatter format = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");
		String formatDateTime = now.format(format);

		String number = this.number;
		book.setPhoneNumber(number);
		book.setWaterWash("Yes");
		book.setFarmWash("No");
		book.setVoccumCleaner("No");
		book.setPollish("No");
		book.setVoccumCleaner("No");
		book.setAirCleaner("No");
		book.setDateAndTime(formatDateTime);

		int result = this.carWashService.setBooking(book);
		return "normal";
	}

	@GetMapping("/medium")
	public String setMedium(Model m) {
		Booking book = new Booking();

		LocalDateTime now = LocalDateTime.now();
		DateTimeFormatter format = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");
		String formatDateTime = now.format(format);

		String number = this.number;
		book.setPhoneNumber(number);
		book.setWaterWash("Yes");
		book.setFarmWash("Yes");
		book.setVoccumCleaner("Yes");
		book.setPollish("No");
		book.setVoccumCleaner("No");
		book.setAirCleaner("No");
		book.setDateAndTime(formatDateTime);
		int result = this.carWashService.setBooking(book);
		return "normal";
	}

	@GetMapping("/premium")
	public String setPremium(Model m) {
		Booking book = new Booking();

		LocalDateTime now = LocalDateTime.now();
		DateTimeFormatter format = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");
		String formatDateTime = now.format(format);

		String number = this.number;
		book.setPhoneNumber(number);
		book.setWaterWash("Yes");
		book.setFarmWash("Yes");
		book.setVoccumCleaner("Yes");
		book.setPollish("Yes");
		book.setVoccumCleaner("Yes");
		book.setAirCleaner("Yes");
		book.setDateAndTime(formatDateTime);
		int result = this.carWashService.setBooking(book);
		return "normal";
	}

	// ===========================car booking get
	// process====================================================

	@GetMapping("/cardetail")
	public String getNormal(Model m) {
		m.addAttribute("wash", "Normal Booking");
		String number = this.number;
		List<Booking> list = this.carWashService.getBooking(number);
		for (Booking b : list) {
			m.addAttribute("number", b.getPhoneNumber());
			m.addAttribute("waterwash", b.getWaterWash());
			m.addAttribute("farmwash", b.getFarmWash());
			m.addAttribute("voccum", b.getVoccumCleaner());
			m.addAttribute("pollish", b.getPollish());
			m.addAttribute("aircleaner", b.getAirCleaner());
			m.addAttribute("dateandtime", b.getDateAndTime());
			System.out.println("hellow" + b);
		}
		return "booking";
	}

	@GetMapping("/cardetail2")
	public String getMedium(Model m) {
		m.addAttribute("wash", "Medium Booking");
		String number = this.number;
		List<Booking> list = this.carWashService.getBooking(number);
		for (Booking b : list) {
			m.addAttribute("number", b.getPhoneNumber());
			m.addAttribute("waterwash", b.getWaterWash());
			m.addAttribute("farmwash", b.getFarmWash());
			m.addAttribute("voccum", b.getVoccumCleaner());
			m.addAttribute("pollish", b.getPollish());
			m.addAttribute("aircleaner", b.getAirCleaner());
			m.addAttribute("dateandtime", b.getDateAndTime());
			System.out.println("hellow" + b);
		}
		return "booking";
	}

	@GetMapping("/cardetail3")
	public String getPremium(Model m) {
		m.addAttribute("wash", "Premium Booking");
		String number = this.number;
		List<Booking> list = this.carWashService.getBooking(number);
		for (Booking b : list) {
			m.addAttribute("number", b.getPhoneNumber());
			m.addAttribute("waterwash", b.getWaterWash());
			m.addAttribute("farmwash", b.getFarmWash());
			m.addAttribute("voccum", b.getVoccumCleaner());
			m.addAttribute("pollish", b.getPollish());
			m.addAttribute("aircleaner", b.getAirCleaner());
			m.addAttribute("dateandtime", b.getDateAndTime());
			System.out.println("hellow" + b);
		}
		return "booking";
	}

//	=========================logout==================
	@GetMapping("/logout")
	public String logOut() {

		sessionHelper.removeMessageFromSession();
		return "home";

	}
	
	@GetMapping("/contact")
	public String show() {
		return "contact";
	}
	
//	========================================reset===============================
	
	@GetMapping("/resetpassword")
	public String passwordPage() {
		return "resetpassword";
	}
	
	@PostMapping(path = "/reset")
	public String getPassword(@RequestParam("phoneNumber") String number, Model m) {
		CarWash carWash = this.carWashService.getPassword(number);
		if(carWash!=null) {
			this.number=number;
			m.addAttribute("number", this.number);
			m.addAttribute("call", "show()");
			System.out.println("hlskdflsd"+carWash);
			return "submitpassword";
		}
		else {
			m.addAttribute("msg", "Please enter a valid number !!");
			return "resetpassword";
		}
	}
	
	@PostMapping("/submitpassword")
	public String getpassword(@RequestParam("phoneNumber") String number, @RequestParam("password") String password, @RequestParam("againPassword") String againPassword) {
		System.out.println("superksdkfdsfklsdkf"+number+" "+password+""+againPassword);
		return "resetpassword";
	}

}
